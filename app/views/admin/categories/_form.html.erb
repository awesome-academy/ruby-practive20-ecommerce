<%= form_with model: [:admin, category], local: true, class: "needs-validation", novalidate: true do |form| %>
  <% if category.errors.any? %>
    <div class="alert alert-danger">
      <h6><%= pluralize(category.errors.count, "error") %> prohibited this category from being saved:</h6>
      <ul class="mb-0">
        <% category.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Basic Information -->
  <div class="mb-4">
    <h6 class="border-bottom pb-2 mb-3"><%= t("admin.categories.form.basic_info") %></h6>
    
    <div class="mb-3">
      <%= form.label :name, class: "form-label" %>
      <%= form.text_field :name, class: "form-control #{'is-invalid' if category.errors[:name].any?}", 
                          placeholder: t("admin.categories.form.name_placeholder"), required: true %>
      <% if category.errors[:name].any? %>
        <div class="invalid-feedback">
          <%= category.errors[:name].first %>
        </div>
      <% end %>
    </div>

    <div class="mb-3">
      <%= form.label :slug, class: "form-label" %>
      <%= form.text_field :slug, class: "form-control #{'is-invalid' if category.errors[:slug].any?}", 
                          placeholder: t("admin.categories.form.slug_placeholder") %>
      <div class="form-text"><%= t("admin.categories.form.auto_slug_hint") %></div>
      <% if category.errors[:slug].any? %>
        <div class="invalid-feedback">
          <%= category.errors[:slug].first %>
        </div>
      <% end %>
    </div>

    <div class="mb-3">
      <%= form.label :description, class: "form-label" %>
      <%= form.text_area :description, class: "form-control #{'is-invalid' if category.errors[:description].any?}", 
                         rows: 3, placeholder: t("admin.categories.form.description_placeholder") %>
      <% if category.errors[:description].any? %>
        <div class="invalid-feedback">
          <%= category.errors[:description].first %>
        </div>
      <% end %>
    </div>

    <div class="row">
      <div class="col-md-6">
        <div class="mb-3">
          <%= form.label :parent_id, t("admin.categories.form.parent_category"), class: "form-label" %>
          <%= form.select :parent_id, 
                          options_for_select(@parent_options || [], category.parent_id),
                          { prompt: t("admin.categories.form.no_parent") },
                          { class: "form-select" } %>
        </div>
      </div>
      <div class="col-md-6">
        <div class="mb-3">
          <%= form.label :position, class: "form-label" %>
          <%= form.number_field :position, class: "form-control", min: 0 %>
          <div class="form-text"><%= t("admin.categories.form.position_hint") %></div>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
        <div class="mb-3">
          <%= form.label :icon_url, t("admin.categories.form.icon_url"), class: "form-label" %>
          <%= form.url_field :icon_url, class: "form-control", 
                             placeholder: t("admin.categories.form.icon_url_placeholder") %>
        </div>
      </div>
      <div class="col-md-6">
        <div class="mb-3">
          <%= form.label :is_active, t("admin.categories.form.status"), class: "form-label" %>
          <div class="form-check form-switch">
            <%= form.check_box :is_active, class: "form-check-input", role: "switch" %>
            <%= form.label :is_active, t("admin.status.active"), class: "form-check-label" %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- SEO Settings -->
  <div class="mb-4">
    <h6 class="border-bottom pb-2 mb-3"><%= t("admin.categories.form.seo_section") %></h6>
    
    <div class="mb-3">
      <%= form.label :meta_title, class: "form-label" %>
      <%= form.text_field :meta_title, class: "form-control", maxlength: 60,
                          placeholder: t("admin.categories.form.meta_title_placeholder") %>
      <div class="form-text">Recommended: 50-60 characters</div>
    </div>

    <div class="mb-3">
      <%= form.label :meta_description, class: "form-label" %>
      <%= form.text_area :meta_description, class: "form-control", rows: 2, maxlength: 160,
                         placeholder: t("admin.categories.form.meta_description_placeholder") %>
      <div class="form-text">Recommended: 150-160 characters</div>
    </div>
  </div>

  <!-- Submit Buttons -->
  <div class="d-flex justify-content-between">
    <%= link_to t("admin.categories.new.cancel"), admin_categories_path, class: "btn btn-outline-secondary" %>
    <div>
      <% if category.persisted? %>
        <%= form.submit t("admin.categories.edit.submit"), class: "btn btn-primary" %>
      <% else %>
        <%= form.submit t("admin.categories.new.submit"), class: "btn btn-success" %>
      <% end %>
    </div>
  </div>
<% end %>

<script>
  // Auto-generate slug from name
  document.getElementById('category_name').addEventListener('input', function() {
    const slugField = document.getElementById('category_slug');
    if (!slugField.value || slugField.dataset.autoGenerated === 'true') {
      const slug = this.value
        .toLowerCase()
        .replace(/[^a-z0-9\s-]/g, '')
        .replace(/\s+/g, '-')
        .replace(/-+/g, '-')
        .trim('-');
      slugField.value = slug;
      slugField.dataset.autoGenerated = 'true';
    }
  });

  // Mark slug as manually edited if user types in it
  document.getElementById('category_slug').addEventListener('input', function() {
    this.dataset.autoGenerated = 'false';
  });

  // Character counter for meta fields
  const metaTitle = document.getElementById('category_meta_title');
  const metaDescription = document.getElementById('category_meta_description');

  if (metaTitle) {
    metaTitle.addEventListener('input', function() {
      const length = this.value.length;
      const formText = this.nextElementSibling;
      formText.textContent = `${length}/60 characters`;
      formText.className = length > 60 ? 'form-text text-danger' : 'form-text';
    });
  }

  if (metaDescription) {
    metaDescription.addEventListener('input', function() {
      const length = this.value.length;
      const formText = this.nextElementSibling;
      formText.textContent = `${length}/160 characters`;
      formText.className = length > 160 ? 'form-text text-danger' : 'form-text';
    });
  }
</script>
